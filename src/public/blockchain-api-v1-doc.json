{
  "openapi": "3.0.0",
  "info": {
    "title": "BlockchainJS API",
    "version": "1.0",
    "description": "An API to manage the decentralized Blockchain network.",
    "contact": {
      "name": "Christopher Ortiz Montero",
      "url": "https://github.com/christophermontero",
      "email": "cgortizm21@gmail.com"
    },
    "termsOfService": "http://swagger.io/terms",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "node1"
    },
    {
      "description": "node2",
      "url": "http://localhost:3002"
    },
    {
      "url": "http://localhost:3003",
      "description": "node3"
    },
    {
      "url": "http://localhost:3004",
      "description": "node4"
    }
  ],
  "paths": {
    "/api/v1/blockchain": {
      "get": {
        "summary": "Get blockchain",
        "operationId": "get-blockchain",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blockchain"
                },
                "examples": {
                  "blockchain-object": {
                    "$ref": "#/components/examples/blockchain"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "blockchain"
        ],
        "description": "Get the entire Blockchain object."
      }
    },
    "/api/v1/transaction": {
      "post": {
        "summary": "Create transaction",
        "operationId": "post-transaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "Transaction will be added in block 2"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "create-transaction": {
                    "value": {
                      "note": "Transaction will be added in block 2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bodyValidation"
          }
        },
        "description": "Create a new transaction into the Blockchain.",
        "requestBody": {
          "$ref": "#/components/requestBodies/transaction"
        },
        "tags": [
          "transaction"
        ]
      }
    },
    "/api/v1/mine": {
      "get": {
        "summary": "Mine block",
        "tags": [
          "mine"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note": {
                      "type": "string"
                    },
                    "block": {
                      "$ref": "#/components/schemas/Block"
                    }
                  }
                },
                "examples": {
                  "mine-block": {
                    "value": {
                      "note": "New block mined successfully",
                      "block": {
                        "index": 2,
                        "timestamp": 1642010815329,
                        "transactions": [
                          {
                            "transactionId": "3e5c856073d211ec8f13b941e4a40c7b",
                            "amount": 10,
                            "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                            "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                          }
                        ],
                        "nonce": 54068,
                        "hash": "00008410e1b515081b3c124abe1c04da08cae7acedddc79c471e7a7794d81520",
                        "prevBlockHash": "0"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "New block rejected",
                      "newBlock": ""
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    },
                    "newBlock": {
                      "$ref": "#/components/schemas/Block"
                    }
                  }
                },
                "examples": {
                  "block-rejected": {
                    "value": {
                      "note": "New block rejected",
                      "newBlock": {
                        "index": 2,
                        "timestamp": 1642010815329,
                        "transactions": [
                          {
                            "transactionId": "3e5c856073d211ec8f13b941e4a40c7b",
                            "amount": 10,
                            "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                            "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                          }
                        ],
                        "nonce": 54068,
                        "hash": "00008410e1b515081b3c124abe1c04da08cae7acedddc79c471e7a7794d81520",
                        "prevBlockHash": "0"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-mine",
        "description": "Add a new block to the Blockchain."
      }
    },
    "/api/v1/register-node": {
      "post": {
        "summary": "Register node",
        "operationId": "post-register-node",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "New node register successfully"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "register-node": {
                    "value": {
                      "note": "New node register successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "Node already exists"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "already-exists": {
                    "value": {
                      "note": "Node already exists"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "register"
        ],
        "description": "Adds the url of the node to another node.",
        "requestBody": {
          "$ref": "#/components/requestBodies/registerNode"
        }
      }
    },
    "/api/v1/register-nodes-bulk": {
      "post": {
        "summary": "Register nodes bulk",
        "operationId": "post-register-nodes-bulk",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "Bulk registration successfully"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "register-bulk": {
                    "value": {
                      "note": "Bulk registration successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "Bulk registration successfully"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "already-exists": {
                    "value": {
                      "note": "Node already exists"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "register"
        ],
        "description": "Adds multiple node urls to the entire network.",
        "requestBody": {
          "$ref": "#/components/requestBodies/networkNodes"
        }
      }
    },
    "/api/v1/register-broadcast-node": {
      "post": {
        "summary": "Register and broadcast node",
        "operationId": "post-register-broadcast-node",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "New node registered with network successfully"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "node-registered": {
                    "value": {
                      "note": "New node registered with network successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "Must be at least one node registered"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "zero-node": {
                    "value": {
                      "note": "Must be at least one node registered"
                    }
                  },
                  "already-exists": {
                    "value": {
                      "note": "Node already exists"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "register"
        ],
        "description": "Aggregates the url of a node and transmits it to all nodes in the network.",
        "requestBody": {
          "$ref": "#/components/requestBodies/registerNode"
        }
      }
    },
    "/api/v1/transaction/broadcast": {
      "post": {
        "summary": "Create and broadcast transaction",
        "operationId": "post-transaction-broadcast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "Transaction created and broadcast successfully"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "transaction-broadcast": {
                    "value": {
                      "note": "Transaction created and broadcast successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bodyValidation"
          }
        },
        "description": "Create a new transaction and transmits it to all nodes in the network.",
        "requestBody": {
          "$ref": "#/components/requestBodies/transaction"
        },
        "tags": [
          "transaction"
        ]
      }
    },
    "/api/v1/receive-new-block": {
      "post": {
        "summary": "Receive new block",
        "operationId": "post-receive-block",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "x-examples": {
                    "example-1": {
                      "note": "New block received and accepted"
                    }
                  },
                  "type": "object",
                  "properties": {
                    "note": {
                      "type": "string"
                    },
                    "newBlock": {
                      "$ref": "#/components/schemas/Block"
                    }
                  }
                },
                "examples": {
                  "block-accepted": {
                    "value": {
                      "note": "New block received and accepted",
                      "newBlock": {
                        "index": 2,
                        "timestamp": 1642010815329,
                        "transactions": [
                          {
                            "transactionId": "3e5c856073d211ec8f13b941e4a40c7b",
                            "amount": 10,
                            "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                            "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                          }
                        ],
                        "nonce": 54068,
                        "hash": "00008410e1b515081b3c124abe1c04da08cae7acedddc79c471e7a7794d81520",
                        "prevBlockHash": "0"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "x-examples": {
                    "example-1": {
                      "note": "New block rejected"
                    }
                  },
                  "allOf": [
                    {
                      "properties": {
                        "note": {
                          "type": "string"
                        },
                        "newBlock": {
                          "$ref": "#/components/schemas/Block"
                        }
                      }
                    }
                  ],
                  "type": "object"
                },
                "examples": {
                  "block-rejected": {
                    "value": {
                      "note": "New block rejected",
                      "newBlock": {
                        "index": 2,
                        "timestamp": 1642010815329,
                        "transactions": [
                          {
                            "transactionId": "3e5c856073d211ec8f13b941e4a40c7b",
                            "amount": 10,
                            "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                            "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                          }
                        ],
                        "nonce": 54068,
                        "hash": "00008410e1b515081b3c124abe1c04da08cae7acedddc79c471e7a7794d81520",
                        "prevBlockHash": "0"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "transaction"
        ],
        "description": "Recive a new block and added to chain.",
        "requestBody": {
          "$ref": "#/components/requestBodies/newBlock"
        }
      }
    },
    "/api/v1/consensus": {
      "get": {
        "summary": "Get consensus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "Current chain has not been replaced",
                      "chain": "testcoin.chain"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    },
                    "chain": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Block"
                      }
                    }
                  }
                },
                "examples": {
                  "chain-not-replaced": {
                    "value": {
                      "note": "Current chain has not been replaced",
                      "chain": [
                        {
                          "index": 1,
                          "timestamp": 1642516853047,
                          "transactions": [],
                          "nonce": 0,
                          "hash": "0",
                          "prevBlockHash": "0"
                        },
                        {
                          "index": 2,
                          "timestamp": 1642516899891,
                          "transactions": [
                            {
                              "transactionId": "bab4e0a0786c11ecb035b35b3bc3934a",
                              "amount": 10,
                              "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                              "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                            }
                          ],
                          "nonce": 206827,
                          "hash": "00001375923f3b341a5f4768187c6888824f82a647593dec44c7833ff20e5655",
                          "prevBlockHash": "0"
                        }
                      ]
                    }
                  },
                  "chain-replaced": {
                    "value": {
                      "note": "This chain has been replaced",
                      "chain": [
                        {
                          "index": 1,
                          "timestamp": 1642516853047,
                          "transactions": [],
                          "nonce": 0,
                          "hash": "0",
                          "prevBlockHash": "0"
                        },
                        {
                          "index": 2,
                          "timestamp": 1642516899891,
                          "transactions": [
                            {
                              "transactionId": "bab4e0a0786c11ecb035b35b3bc3934a",
                              "amount": 10,
                              "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                              "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                            }
                          ],
                          "nonce": 206827,
                          "hash": "00001375923f3b341a5f4768187c6888824f82a647593dec44c7833ff20e5655",
                          "prevBlockHash": "0"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "note": "This chain",
                      "chain": "a"
                    }
                  },
                  "properties": {
                    "note": {
                      "type": "string"
                    },
                    "chain": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Block"
                      }
                    }
                  }
                },
                "examples": {
                  "chain-tampered": {
                    "value": {
                      "note": "Some chain was tampered",
                      "chain": [
                        {
                          "index": 1,
                          "timestamp": 1642516853047,
                          "transactions": [],
                          "nonce": 0,
                          "hash": "0",
                          "prevBlockHash": "0"
                        },
                        {
                          "index": 2,
                          "timestamp": 1642516899891,
                          "transactions": [
                            {
                              "transactionId": "bab4e0a0786c11ecb035b35b3bc3934a",
                              "amount": 10,
                              "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                              "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                            }
                          ],
                          "nonce": 206827,
                          "hash": "00001375923f3b341a5f4768187c6888824f82a647593dec44c7833ff20e5655",
                          "prevBlockHash": "0"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-consensus",
        "tags": [
          "consensus"
        ],
        "description": "The algorithm contrast the information the whole nodes to verify the data in the network."
      }
    },
    "/api/v1/block/{blockHash}": {
      "get": {
        "summary": "Get block by hash",
        "tags": [
          "blockchain"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "block": {
                      "$ref": "#/components/schemas/Block"
                    }
                  }
                },
                "examples": {
                  "block-finded": {
                    "$ref": "#/components/examples/block"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "block": null
                    }
                  },
                  "properties": {
                    "block": {}
                  }
                },
                "examples": {
                  "non-block": {
                    "value": {
                      "block": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-block-by-hash",
        "description": "Get block by hash"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/blockHash"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Blockchain": {
        "title": "Blockchain",
        "description": "",
        "x-examples": {},
        "type": "object",
        "properties": {
          "chain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Block"
            }
          },
          "pendingTransactions": {
            "type": "array",
            "description": "The pending transactions go here.",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "currentNodeUrl": {
            "type": "string"
          },
          "networkNodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Block": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "",
        "properties": {
          "index": {
            "type": "number"
          },
          "timestamp": {
            "type": "number"
          },
          "transactions": {
            "type": "array",
            "description": "When transactions are added to the Block, go here.",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "nonce": {
            "type": "number"
          },
          "hash": {
            "type": "string"
          },
          "prevBlockHash": {
            "type": "string"
          }
        }
      },
      "Transaction": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "sender": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "bodyValidation": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "_original": {
                    "amount": "a",
                    "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                    "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                  },
                  "details": [
                    {
                      "message": "\"amount\" must be a number",
                      "path": [
                        "amount"
                      ],
                      "type": "number.base",
                      "context": {
                        "label": "amount",
                        "value": "a",
                        "key": "amount"
                      }
                    }
                  ]
                }
              },
              "properties": {
                "_original": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "sender": {
                      "type": "string"
                    },
                    "recipient": {
                      "type": "string"
                    }
                  }
                },
                "details": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "path": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "type": "string"
                      },
                      "context": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "error-body-validation": {
                "$ref": "#/components/examples/bodyValidation"
              }
            }
          }
        }
      }
    },
    "examples": {
      "blockchain": {
        "value": {
          "chain": [
            {
              "index": 1,
              "timestamp": 1642008048586,
              "transactions": [],
              "nonce": 0,
              "hash": "0",
              "prevBlockHash": "0"
            },
            {
              "index": 2,
              "timestamp": 1642010815329,
              "transactions": [
                {
                  "transactionId": "3e5c856073d211ec8f13b941e4a40c7b",
                  "amount": 10,
                  "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                  "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                }
              ],
              "nonce": 54068,
              "hash": "00008410e1b515081b3c124abe1c04da08cae7acedddc79c471e7a7794d81520",
              "prevBlockHash": "0"
            }
          ],
          "pendingTransactions": [
            {
              "transactionId": "6d291ca073d211ec8f13b941e4a40c7b",
              "amount": 12.5,
              "sender": "00",
              "recipient": "fc0c42a073cb11ec8f13b941e4a40c7b"
            }
          ],
          "currentNodeUrl": "http://localhost:3001",
          "networkNodes": [
            "http://localhost:3002",
            "http://localhost:3003"
          ]
        }
      },
      "transaction": {
        "value": {
          "amount": 20,
          "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
          "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
        }
      },
      "bodyValidation": {
        "value": {
          "_original": {
            "amount": "a",
            "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
            "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
          },
          "details": [
            {
              "message": "\"amount\" must be a number",
              "path": [
                "amount"
              ],
              "type": "number.base",
              "context": {
                "label": "amount",
                "value": "a",
                "key": "amount"
              }
            }
          ]
        }
      },
      "registerNode": {
        "value": {
          "newNodeUrl": "http://localhost:3002"
        }
      },
      "networkNodes": {
        "value": {
          "allNetworkNodes": [
            "http://localhost:3004",
            "http://localhost:3005"
          ]
        }
      },
      "newBlock": {
        "value": {
          "newBlock": {
            "index": 2,
            "timestamp": 1642010815329,
            "transactions": [
              {
                "transactionId": "3e5c856073d211ec8f13b941e4a40c7b",
                "amount": 10,
                "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
              }
            ],
            "nonce": 54068,
            "hash": "00008410e1b515081b3c124abe1c04da08cae7acedddc79c471e7a7794d81520",
            "prevBlockHash": "0"
          }
        }
      },
      "block": {
        "value": {
          "block": {
            "index": 2,
            "timestamp": 1642547406903,
            "transactions": [
              {
                "transactionId": "c51a317078b311ec821ac1453c51d03c",
                "amount": 20,
                "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
              }
            ],
            "nonce": 23935,
            "hash": "00008383118e00066426dffbc361ff0c77fcab1627265e1ed84241ffe3a7c682",
            "prevBlockHash": "0"
          }
        }
      }
    },
    "requestBodies": {
      "transaction": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "amount": 20,
                  "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                  "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                }
              },
              "properties": {
                "amount": {
                  "type": "number"
                },
                "sender": {
                  "type": "string",
                  "description": "Sender address.",
                  "minLength": 2,
                  "maxLength": 64
                },
                "recipient": {
                  "type": "string",
                  "description": "Recipient address.",
                  "minLength": 32,
                  "maxLength": 64
                }
              },
              "required": [
                "amount",
                "sender",
                "recipient"
              ]
            },
            "examples": {
              "transaction-body": {
                "$ref": "#/components/examples/transaction"
              }
            }
          }
        }
      },
      "registerNode": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "newNodeUrl": "http://localhost:3002"
                }
              },
              "properties": {
                "newNodeUrl": {
                  "type": "string"
                }
              },
              "required": [
                "newNodeUrl"
              ]
            },
            "examples": {
              "register-body": {
                "$ref": "#/components/examples/registerNode"
              }
            }
          }
        }
      },
      "networkNodes": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "allNetworkNodes": [
                    "http://localhost:3004",
                    "http://localhost:3005"
                  ]
                }
              },
              "properties": {
                "allNetworkNodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "allNetworkNodes"
              ]
            },
            "examples": {
              "bulk-body": {
                "$ref": "#/components/examples/networkNodes"
              }
            }
          }
        }
      },
      "newBlock": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "newBlock": {
                    "index": 2,
                    "timestamp": 1642010815329,
                    "transactions": [
                      {
                        "transactionId": "3e5c856073d211ec8f13b941e4a40c7b",
                        "amount": 10,
                        "sender": "cf942722a4ecc3b89e3911fbb8f84071bca39142aba93dc9b971bb06ae980819",
                        "recipient": "a6d0f357931dfc871f97164d8c848501e25377a9a327d93241e0abd0add383ea"
                      }
                    ],
                    "nonce": 54068,
                    "hash": "00008410e1b515081b3c124abe1c04da08cae7acedddc79c471e7a7794d81520",
                    "prevBlockHash": "0"
                  }
                }
              },
              "properties": {
                "newBlock": {
                  "type": "object",
                  "required": [
                    "index",
                    "timestamp",
                    "transactions",
                    "nonce",
                    "hash",
                    "prevBlockHash"
                  ],
                  "properties": {
                    "index": {
                      "type": "number"
                    },
                    "timestamp": {
                      "type": "number"
                    },
                    "transactions": {
                      "type": "array",
                      "uniqueItems": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionId": {
                            "type": "string",
                            "minLength": 32,
                            "maxLength": 32
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0
                          },
                          "sender": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 64
                          },
                          "recipient": {
                            "type": "string",
                            "minLength": 32,
                            "maxLength": 64
                          }
                        },
                        "required": [
                          "transactionId",
                          "amount",
                          "sender",
                          "recipient"
                        ]
                      }
                    },
                    "nonce": {
                      "type": "number"
                    },
                    "hash": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64
                    },
                    "prevBlockHash": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 64
                    }
                  }
                }
              },
              "required": [
                "newBlock"
              ]
            },
            "examples": {
              "block-body": {
                "$ref": "#/components/examples/newBlock"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "blockHash": {
        "name": "blockHash",
        "in": "path",
        "schema": {
          "type": "string",
          "example": "00008383118e00066426dffbc361ff0c77fcab1627265e1ed84241ffe3a7c682"
        },
        "required": true
      }
    }
  },
  "tags": [
    {
      "name": "blockchain"
    },
    {
      "name": "consensus"
    },
    {
      "name": "mine"
    },
    {
      "name": "register"
    },
    {
      "name": "transaction"
    }
  ]
}